/**
 * @module Popup
 * @desc popup instance for show/hide
 *
 * @function
 * @name show - show popup
 *
 */

import normalPopup from './popup.vue'
import progressPopup from './progressPopup.vue'
import Vue from 'vue'

let shownPopupHashMap = {}

window.shownPopupHashMap = shownPopupHashMap

export default function () {
  return {
    show (props) {
      const node = document.createElement('div')
      document.body.appendChild(node)
      let popup
      if (props.type === 'progress') {
        popup = progressPopup
      } else {
        popup = normalPopup
      }
      let vm = new Vue({
        el: node,
        data () {
          return {props}
        },
        destroyed () {
          delete shownPopupHashMap[this._uid]
        },
        render: h => h(popup, {props})
      })

      let popupObj = { }

      if (props.type === 'progress') {
        popupObj = {
          close () {
            vm.closePopup()
          },
          updateProgress (width) {
            vm.updateProgress(width)
          }
        }
      } else {
        popupObj = {
          close () {
            vm.closePopup()
          }
        }
      }
      shownPopupHashMap[vm._uid] = popupObj
      return popupObj
    },
    closeTopPopup () {
      var keys = Object.keys(shownPopupHashMap)
      keys.sort((a, b) => a - b)
      if (keys.length === 0) {
        return false
      } else {
        var topPopup = shownPopupHashMap[keys[keys.length - 1]]
        topPopup.close()
        delete shownPopupHashMap[keys.length - 1]
        return true
      }
    }
  }
}
